#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int findThirdFarthest(vector<int>& dist) {
    // Sort the distances in descending order
    sort(dist.rbegin(), dist.rend());

    // Remove duplicates
    dist.erase(unique(dist.begin(), dist.end()), dist.end());

    // If there are less than three distances, return the farthest one
    if (dist.size() < 3) {
        return dist.front();
    }

    // Return the third farthest distance
    return dist[2];
}

int main() {
    int t;
    cin >> t;

    while (t--) {
        int n;
        cin >> n;

        vector<int> dist(n);
        for (int i = 0; i < n; ++i) {
            cin >> dist[i];
        }

        int result = findThirdFarthest(dist);
        cout << result << endl;
    }

    return 0;
}
